server:
  port: ${LOCAL_SERVER_PORT}

spring:
  config:
    activate:
      on-profile: local
    include: env

  datasource:
    master:
      hikari:
        username: ${LOCAL_DB_MASTER_USERNAME}
        password: ${LOCAL_DB_MASTER_PASSWORD}
        driver-class-name: org.mariadb.jdbc.Driver
        jdbc-url: jdbc:mariadb://${LOCAL_DB_MASTER_IP}:${LOCAL_DB_MASTER_PORT}/${LOCAL_DB_MASTER_SCHEMA}?useUnicode=yes&characterEncoding=UTF-8
        pool-name: ${LOCAL_DB_MASTER_POOL}

    slave:
      hikari:
        username: ${LOCAL_DB_SLAVE_USERNAME}
        password: ${LOCAL_DB_SLAVE_PASSWORD}
        driver-class-name: org.mariadb.jdbc.Driver
        jdbc-url: jdbc:mariadb://${LOCAL_DB_SLAVE_IP}:${LOCAL_DB_SLAVE_PORT}/${LOCAL_B_SLAVE_SCHEMA}?useUnicode=yes&characterEncoding=UTF-8
        pool-name: ${LOCAL_DB_SLAVE_POOL}

  jpa:
    database-platform: org.hibernate.dialect.MariaDB103Dialect
    hibernate:
      format_sql: true
      show_sql: true
      use_sql_comments: true
      ddl-auto: ${LOCAL_DDL_AUTO}
      use-new-id-generator-mappings: true
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          batch_size: ${LOCAL_BATCH_SIZE}
          batch_versioned_data: true
        order_inserts: true
        order_updates: true

  batch:
    job:
      enabled: false
      names: "freeblog_batch_job"
    jdbc:
      initialize-schema: always

  redis:
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 5
        max-wait: 1000
    port: ${LOCAL_REDIS_PORT}
    host: ${LOCAL_REDIS_HOST}
    connect-timeout: 100000
    timeout: 180000

springdoc:
  cache:
    disabled: true
  swagger-ui:
    path: swagger-ui-custom.html
  api-docs:
    path: /api-docs
  packages-to-scan: com.service.freeblog_batch


logging:
  pattern:
    console: "[%d] %-5level [${PID:-} - %thread - {%C => %M, %l}] %logger : %msg%n"
    file: "[%d] %-5level [${PID:-} - %thread - {%C => %M, %l}] %logger : %msg%n"

  file:
    name: ./logs/freeblog_batch.log
    max-history: 30

  level:
    root: INFO
    com.service: INFO

    org.hibernate:
#      SQL: debug
#      type.descriptor.sql: trace

mybatis:
  mapper-locations: mybatis/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl


##### util config #####
util-config:
  # SFTP VM CONFIG
  # 저장 타입: images | videos
  aws_ec2_sftp:
    ip: ${LOCAL_AWS_EC2_SFTP_IP}
    port: ${LOCAL_AWS_EC2_SFTP_PORT}
    id: ${LOCAL_AWS_EC2_SFTP_ID}
    password: ${LOCAL_AWS_EC2_SFTP_PASSWORD}
    directory: ${LOCAL_AWS_EC2_SFTP_DIRECTORY}
    timeout: ${LOCAL_AWS_EC2_SFTP_TIMEOUT}
    protocol: ${LOCAL_AWS_EC2_SFTP_PROTOCOL}

  # AWS CONFIG
  aws_s3-bucket:
    access_key_id: ${LOCAL_AWS_S3_BUCKET_ACCESS_KEY_ID}
    secret_access_key_id: ${LOCAL_AWS_S3_BUCKET_SECRET_ACCESS_KEY_ID}
    bucket_name: ${LOCAL_AWS_S3_BUCKET_NAME}

  sql_config:
    sql_search_pattern: LIKE

  app_config:
    # 스케줄링 크론잡
    batch_scheduled_freeblog_cron_job: "0 59 23 * * *" # 매일 23시 59분에 실행
    batch_scheduled_old_file_clean_job: "0 44 4 1 1 *"
    batch_region_time: "Asia/Seoul"

    recent_popular_post_count: 5
    recent_comment_count: 5
    user_like_post_expire_days: 2592000
    user_like_post_max_count: 100
    max_post_content_size: 300

  batch_config:
    old_file_clean_period: 315576000

